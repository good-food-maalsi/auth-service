// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(cuid())
  username      String
  email         String       @unique
  password      String
  doubleOptedIn Boolean      @default(false)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  userRoles     UserRoles[]
  magicTokens   MagicToken[]
}

enum Role {
  ADMIN
  FRANCHISE_OWNER
  STAFF
  CUSTOMER
}

model Roles {
  id          String      @id @default(cuid())
  role        Role        @unique
  description String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  userRoles   UserRoles[]
}

model UserRoles {
  id        String   @id @default(cuid())
  userId    String
  roleId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  role Roles @relation(fields: [roleId], references: [id])

  // @@index([userId])
  // @@index([roleId])
  // @@index([roleId, userId])
}

model MagicToken {
  id        String   @id @default(cuid())
  token     String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
}
